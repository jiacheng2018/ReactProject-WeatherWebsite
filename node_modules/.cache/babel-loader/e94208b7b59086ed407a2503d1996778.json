{"ast":null,"code":"var _jsxFileName = \"/Users/jiacheng/Desktop/DataBase/my-app/src/App.jsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Top from './component/top/top';\nimport Bottom from './component/bottom/bottom';\nimport './sass/style.scss';\nimport axios from 'axios';\nconst weather_key = \"3849ef38d87bc6756e74281fc82f6c47\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityName: \"London\",\n      forcastDay: 5,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    //retrieve data\n    const _this$state = this.state,\n          cityName = _this$state.cityName,\n          forcastDay = _this$state.forcastDay;\n    const URL = \"http://api.weatherstack.com/current?access_key=\".concat(weather_key, \"&query=\").concat(cityName);\n    axios.get(URL).then(res => {\n      return res.data;\n    }).then(data => {\n      this.setState({\n        loading: false,\n        temp_c: data.current.temparature,\n        isDay: data.location.localtime,\n        iconURL: data.current.weather_descriptions,\n        text: data.location.country,\n        location: data.location.name\n      });\n    }).catch(err => {\n      if (err) {\n        console.error(\"Cannot fetch weather Data from API\", err);\n      }\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          location = _this$state2.location,\n          temp_c = _this$state2.temp_c,\n          isDay = _this$state2.isDay,\n          text = _this$state2.text,\n          iconURL = _this$state2.iconURL;\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, loading && React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"The page is loading...\"), !loading && React.createElement(\"div\", {\n      className: \"top-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Top, {\n      location: location,\n      temp_c: temp_c,\n      isDay: isDay,\n      text: text,\n      iconURL: iconURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"bottom-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Bottom, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jiacheng/Desktop/DataBase/my-app/src/App.jsx"],"names":["React","Top","Bottom","axios","weather_key","App","Component","constructor","props","state","cityName","forcastDay","loading","componentDidMount","URL","get","then","res","data","setState","temp_c","current","temparature","isDay","location","localtime","iconURL","weather_descriptions","text","country","name","catch","err","console","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,WAAW,GAAC,kCAAlB;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACRC,MAAAA,QAAQ,EAAC,QADD;AAERC,MAAAA,UAAU,EAAC,CAFH;AAGRC,MAAAA,OAAO,EAAC;AAHA,KAAX;AAKD;;AACDC,EAAAA,iBAAiB,GAAE;AACd;AADc,wBAEa,KAAKJ,KAFlB;AAAA,UAERC,QAFQ,eAERA,QAFQ;AAAA,UAECC,UAFD,eAECA,UAFD;AAGf,UAAMG,GAAG,4DAAmDV,WAAnD,oBAAwEM,QAAxE,CAAT;AACAP,IAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,GAAD,IAAO;AACvB,aAAOA,GAAG,CAACC,IAAX;AACH,KAFD,EAEGF,IAFH,CAESE,IAAD,IAAQ;AACb,WAAKC,QAAL,CAAc;AACZP,QAAAA,OAAO,EAAC,KADI;AAEZQ,QAAAA,MAAM,EAACF,IAAI,CAACG,OAAL,CAAaC,WAFR;AAGZC,QAAAA,KAAK,EAACL,IAAI,CAACM,QAAL,CAAcC,SAHR;AAIZC,QAAAA,OAAO,EAACR,IAAI,CAACG,OAAL,CAAaM,oBAJT;AAKZC,QAAAA,IAAI,EAACV,IAAI,CAACM,QAAL,CAAcK,OALP;AAMZL,QAAAA,QAAQ,EAACN,IAAI,CAACM,QAAL,CAAcM;AANX,OAAd;AAQF,KAXD,EAWGC,KAXH,CAWUC,GAAD,IAAO;AACd,UAAGA,GAAH,EAAO;AACLC,QAAAA,OAAO,CAACC,KAAR,CAAc,oCAAd,EAAmDF,GAAnD;AACD;AACF,KAfD;AAgBH;;AACDG,EAAAA,MAAM,GAAE;AAAA,yBACqC,KAAK1B,KAD1C;AAAA,UACCe,QADD,gBACCA,QADD;AAAA,UACUJ,MADV,gBACUA,MADV;AAAA,UACiBG,KADjB,gBACiBA,KADjB;AAAA,UACuBK,IADvB,gBACuBA,IADvB;AAAA,UAC4BF,OAD5B,gBAC4BA,OAD5B;AAEJ,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGd,OAAO,IAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADZ,EAEG,CAACA,OAAD,IACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,QAAQ,EAAEY,QAAf;AAAyB,MAAA,MAAM,EAAEJ,MAAjC;AAAyC,MAAA,KAAK,EAAEG,KAAhD;AAAuD,MAAA,IAAI,EAAEK,IAA7D;AAAmE,MAAA,OAAO,EAAEF,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHN,EAQM;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARN,CADF,CADF;AAgBD;;AAhD0B;;AAmDjC,eAAerB,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Top from './component/top/top';\nimport Bottom from './component/bottom/bottom';\nimport './sass/style.scss';\nimport axios from 'axios';\nconst weather_key=\"3849ef38d87bc6756e74281fc82f6c47\";\nclass App extends React.Component{\n    constructor(props){\n      super(props);\n      this.state={\n         cityName:\"London\",\n         forcastDay:5,\n         loading:true\n      }\n    }\n    componentDidMount(){\n         //retrieve data\n        const {cityName,forcastDay}=this.state;\n        const URL=`http://api.weatherstack.com/current?access_key=${weather_key}&query=${cityName}`;\n        axios.get(URL).then((res)=>{\n            return res.data;\n        }).then((data)=>{\n           this.setState({\n             loading:false,\n             temp_c:data.current.temparature,\n             isDay:data.location.localtime,\n             iconURL:data.current.weather_descriptions,\n             text:data.location.country,\n             location:data.location.name\n            })\n        }).catch((err)=>{\n          if(err){\n            console.error(\"Cannot fetch weather Data from API\",err);\n          }\n        })\n    }\n    render(){\n      const {location,temp_c,isDay,text,iconURL}=this.state;\n        return (\n          <div className=\"app-container\">\n            <div className=\"main-container\"> \n              {loading&&<h3>The page is loading...</h3>}\n              {!loading&&\n                  <div className=\"top-section\">\n                      <Top location={location} temp_c={temp_c} isDay={isDay} text={text} iconURL={iconURL} ></Top>\n                  </div>\n              }\n                 \n                  <div className=\"bottom-section\">\n                      <Bottom></Bottom>\n                  </div>\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/jiacheng/Documents/Application/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Title from './Components/Title';\nimport Form from './Components/Form';\nimport { tsConstructorType } from '@babel/types';\nimport Weather from './Components/Weather';\nconst API_KEY = '8fd8acf9a851ceb137378de3bd7d6a7c';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      huminity: undefined,\n      error: undefined,\n      description: undefined,\n      error: ''\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          huminity: data.main.huminity,\n          description: data.weather[0].description,\n          error: ''\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          city: undefined,\n          country: undefined,\n          huminity: undefined,\n          description: undefined,\n          error: 'Please enter correct Address!!'\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-5 title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      huminity: this.state.huminity,\n      description: this.state.description,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jiacheng/Documents/Application/my-app/src/App.js"],"names":["React","Component","Title","Form","tsConstructorType","Weather","API_KEY","App","state","temperature","undefined","city","country","huminity","error","description","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","main","temp","name","sys","weather","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport Title from './Components/Title';\nimport Form from './Components/Form';\nimport { tsConstructorType } from '@babel/types';\nimport Weather from './Components/Weather';\nconst API_KEY = '8fd8acf9a851ceb137378de3bd7d6a7c';\nclass App extends Component {\n          state = {\n                    temperature: undefined,\n                    city: undefined,\n                    country: undefined,\n                    huminity: undefined,\n                    error: undefined,\n                    description: undefined,\n                    error: ''\n          };\n          getWeather = async e => {\n                    e.preventDefault();\n                    const city = e.target.elements.city.value;\n                    const country = e.target.elements.country.value;\n                    const api_call = await fetch(\n                              `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n                    );\n                    const data = await api_call.json();\n                    if (city && country) {\n                              this.setState({\n                                        temperature: data.main.temp,\n                                        city: data.name,\n                                        country: data.sys.country,\n                                        huminity: data.main.huminity,\n                                        description:\n                                                  data.weather[0].description,\n                                        error: ''\n                              });\n                    } else {\n                              this.setState({\n                                        temperature: undefined,\n                                        city: undefined,\n                                        country: undefined,\n                                        huminity: undefined,\n                                        description: undefined,\n                                        error: 'Please enter correct Address!!'\n                              });\n                    }\n          };\n          render() {\n                    return (\n                              <div>\n                                        <div className=\"wrapper\">\n                                                  <div className=\"main\">\n                                                            <div className=\"container\">\n                                                                      <div className=\"row\">\n                                                                                <div className=\"col-xs-5 title-container\">\n                                                                                          <Title />\n                                                                                </div>\n                                                                                <div className=\"col-xs-7 form-container\">\n                                                                                          <Form\n                                                                                                    getWeather={\n                                                                                                              this\n                                                                                                                        .getWeather\n                                                                                                    }\n                                                                                          />\n                                                                                          <Weather\n                                                                                                    temperature={\n                                                                                                              this\n                                                                                                                        .state\n                                                                                                                        .temperature\n                                                                                                    }\n                                                                                                    city={\n                                                                                                              this\n                                                                                                                        .state\n                                                                                                                        .city\n                                                                                                    }\n                                                                                                    country={\n                                                                                                              this\n                                                                                                                        .state\n                                                                                                                        .country\n                                                                                                    }\n                                                                                                    huminity={\n                                                                                                              this\n                                                                                                                        .state\n                                                                                                                        .huminity\n                                                                                                    }\n                                                                                                    description={\n                                                                                                              this\n                                                                                                                        .state\n                                                                                                                        .description\n                                                                                                    }\n                                                                                                    error={\n                                                                                                              this\n                                                                                                                        .state\n                                                                                                                        .error\n                                                                                                    }\n                                                                                          />\n                                                                                </div>\n                                                                      </div>\n                                                            </div>\n                                                  </div>\n                                        </div>\n                              </div>\n                    );\n          }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
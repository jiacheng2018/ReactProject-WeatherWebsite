{"ast":null,"code":"var _jsxFileName = \"/Users/jiacheng/Documents/Application/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport Title from './Components/Title';\nimport Form from './Components/Form';\nimport { tsConstructorType } from '@babel/types';\nimport Weather from './Components/Weather';\nconst API_KEY = \"8fd8acf9a851ceb137378de3bd7d6a7c\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      huminity: undefined,\n      error: undefined,\n      description: undefined\n    };\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (city && country) {\n        this.setState({\n          temperature: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          huminity: data.main.huminity,\n          description: data.weather[0].description\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      city: this.state.city,\n      country: this.state.country,\n      huminity: this.state.huminity,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jiacheng/Documents/Application/my-app/src/App.js"],"names":["React","Component","Title","Form","tsConstructorType","Weather","API_KEY","App","state","temperature","undefined","city","country","huminity","error","description","getWeather","e","preventDefault","target","elements","value","api_call","fetch","data","json","setState","main","temp","name","sys","weather","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,iBAAR,QAAgC,cAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AACA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBO,KADwB,GAChB;AACJC,MAAAA,WAAW,EAAEC,SADT;AAEJC,MAAAA,IAAI,EAAED,SAFF;AAGJE,MAAAA,OAAO,EAAEF,SAHL;AAIJG,MAAAA,QAAQ,EAAEH,SAJN;AAKJI,MAAAA,KAAK,EAAEJ,SALH;AAMJK,MAAAA,WAAW,EAAEL;AANT,KADgB;;AAAA,SASxBM,UATwB,GASX,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAAGM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAApC;AACA,YAAMT,OAAO,GAAGK,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBR,OAAlB,CAA0BS,KAA1C;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDZ,IAArD,cAA6DC,OAA7D,oBAA8EN,OAA9E,mBAA5B;AACA,YAAMkB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAId,IAAI,IAAIC,OAAZ,EAAqB;AACjB,aAAKc,QAAL,CAAc;AAACjB,UAAAA,WAAW,EAAEe,IAAI,CAACG,IAAL,CAAUC,IAAxB;AAA8BjB,UAAAA,IAAI,EAAEa,IAAI,CAACK,IAAzC;AAA+CjB,UAAAA,OAAO,EAAEY,IAAI,CAACM,GAAL,CAASlB,OAAjE;AAA0EC,UAAAA,QAAQ,EAAEW,IAAI,CAACG,IAAL,CAAUd,QAA9F;AAAwGE,UAAAA,WAAW,EAAES,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBhB;AAArI,SAAd;AACH;AACJ,KAlBuB;AAAA;;AAmBxBiB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAM,MAAA,UAAU,EACZ,KAAKhB,UADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKI,oBAAC,OAAD;AAAS,MAAA,WAAW,EACZ,KAAKR,KAAL,CAAWC,WADnB;AAGI,MAAA,IAAI,EACA,KAAKD,KAAL,CAAWG,IAJnB;AAMI,MAAA,OAAO,EACH,KAAKH,KAAL,CAAWI,OAPnB;AASI,MAAA,QAAQ,EACJ,KAAKJ,KAAL,CAAWK,QAVnB;AAYI,MAAA,WAAW,EACP,KAAKL,KAAL,CAAWO,WAbnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AAuBH;;AA3CuB;;AA8C5B,eAAeR,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport Title from './Components/Title';\nimport Form from './Components/Form';\nimport {tsConstructorType} from '@babel/types';\nimport Weather from './Components/Weather';\nconst API_KEY = \"8fd8acf9a851ceb137378de3bd7d6a7c\";\nclass App extends Component {\n    state = {\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        huminity: undefined,\n        error: undefined,\n        description: undefined\n    }\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n        const data = await api_call.json();\n        if (city && country) {\n            this.setState({temperature: data.main.temp, city: data.name, country: data.sys.country, huminity: data.main.huminity, description: data.weather[0].description});\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <Title/>\n                <Form getWeather={\n                    this.getWeather\n                }/>\n                <Weather temperature={\n                        this.state.temperature\n                    }\n                    city={\n                        this.state.city\n                    }\n                    country={\n                        this.state.country\n                    }\n                    huminity={\n                        this.state.huminity\n                    }\n                    description={\n                        this.state.description\n                    }/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}